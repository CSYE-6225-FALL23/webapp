name: Build AMI using Packer

on:
  push:
    branches:
      - main

jobs:
  build_ami:
    name: db_health_check
    runs-on: ubuntu-latest

    steps:
      - name: Check if this push is from a PR merge
        run: |
          if [[ ${{ github.event_name }} == 'push' && ${{ contains(github.event.head_commit.message, 'Merge pull request') }} ]]; then
            echo "This push is from a pull request merge."
          else
            echo "This push is not from a pull request merge."
            exit 1
          fi

      - name: Checkout code
        if: success()
        uses: actions/checkout@v2

      - name: create env file
        if: success()
        run: |
          cd ./server
          touch .env
          echo POSTGRES_DB=${{ secrets.POSTGRES_DB }} >> .env
          echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
          echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
          echo POSTGRES_URI=${{ secrets.POSTGRES_URI }} >> .env
          echo FILEPATH=${{ secrets.FILEPATH }} >> .env

      - name: Install and run PostgreSQL
        if: success()
        run: |
          sudo apt-get update
          sudo apt-get install postgresql
          sudo service postgresql start

      - name: Create PostgreSQL Database
        if: success()
        run: |
          sudo -u postgres psql -c "CREATE DATABASE ${{ secrets.POSTGRES_DB }} OWNER ${{ secrets.POSTGRES_USER }};"
          sudo -u postgres psql -c "ALTER USER postgres WITH PASSWORD ${{ secrets.POSTGRES_PASSWORD }};"

      - name: Install Dependencies
        if: success()
        run: |
          cd ./database && npm install
          cd ../server && npm install

      - name: Run Integration Tests
        if: success()
        run: |
          cd ./server && npm run test
      
      - name: Zip Folder
        if: success()
        run: zip -r webapp.zip .

      # - name: Install Packer
      #   if: success()
      #   run: |
      #     wget https://releases.hashicorp.com/packer/1.7.4/packer_1.7.4_linux_amd64.zip
      #     unzip packer_1.7.4_linux_amd64.zip
      #     sudo mv packer /usr/local/bin/
      #   shell: bash

      - name: Setting up packer
        uses: hashicorp/setup-packer@main

      - name: Build AMI
        if: success()
        run: |
          cd deployment/ami
          packer init ./
          packer build \
            -var "aws_access_key=${{ secrets.AWS_ACCESS_KEY }}" \
            -var "aws_secret_access_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}" \
            -var "source_ami=${{ vars.SOURCE_AMI }}" \
            -var "ami_region=${{ vars.AMI_REGION }}" \
            -var "zip_file_path=${{ vars.APP_ZIP_PATH }}" \
            -var "ssh_username=${{ vars.SSH_USERNAME }}" \
            -var "subnet_id=${{ vars.SUBNET_ID }}" \
            -var "instanceType=${{ vars.INSTANCE_TYPE }}" \
            -var "ebsVolumeSize=${{ vars.EBS_VOLUME_SIZE }}" \
            -var "ebsVolumeType=${{ vars.EBS_VOLUME_TYPE }}" \
            -var "webappDestinationFolder=${{ vars.WEBAPP_DESTINATION_PATH }}" \
            -var "postgresDB=${{ secrets.POSTGRES_DB }}" .